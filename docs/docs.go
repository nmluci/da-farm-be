// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/farms": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farm"
                ],
                "summary": "get all farm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keyword to search",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "number of entity per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "n-th page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/farms.ListFarmResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httpres.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpres.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farm"
                ],
                "summary": "create a new farm",
                "parameters": [
                    {
                        "description": "farm payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/farms.FarmPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "farm with same name already exists",
                        "schema": {
                            "$ref": "#/definitions/httpres.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpres.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/farms/{farmID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farm"
                ],
                "summary": "get specific farm by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "farmID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/farms.FarmResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httpres.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpres.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farm"
                ],
                "summary": "update farm data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "farmID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "farm payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/farms.FarmPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "farm not existed",
                        "schema": {
                            "$ref": "#/definitions/httpres.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpres.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farm"
                ],
                "summary": "delete specific farm by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "farmID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/farms.FarmResponse"
                        }
                    },
                    "404": {
                        "description": "farm not existed",
                        "schema": {
                            "$ref": "#/definitions/httpres.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpres.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/misc/ping": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "misc"
                ],
                "summary": "check server status",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "farms.FarmPayload": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Farm A"
                }
            }
        },
        "farms.FarmResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Farm A"
                }
            }
        },
        "farms.ListFarmResponse": {
            "type": "object",
            "properties": {
                "farms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/farms.FarmResponse"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/httpres.ListPagination"
                }
            }
        },
        "httpres.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404001
                },
                "msg": {
                    "type": "string",
                    "example": "unknown"
                }
            }
        },
        "httpres.ListPagination": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 100
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total_page": {
                    "type": "integer",
                    "example": 10
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "DA Farm Backend",
	Description:      "Simple API to manage Farms and Ponds",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
